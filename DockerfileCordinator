FROM alpine AS builder

######## DOWNLOAD TRINO ########
ARG TRINO_SERVER_VERSION=362
RUN apk update && apk add --no-cache wget tar
RUN wget -nv --show-progress --progress=bar:force:noscroll https://repo1.maven.org/maven2/io/trino/trino-server/${TRINO_SERVER_VERSION}/trino-server-${TRINO_SERVER_VERSION}.tar.gz
RUN mkdir trino-server
RUN tar -xf trino-server-${TRINO_SERVER_VERSION}.tar.gz
RUN cp -r trino-server-${TRINO_SERVER_VERSION}/* trino-server/

######## MAIN BUILD ########
FROM azul/zulu-openjdk:11

######## DOWNLOAD ADDITIONAL DEPENDENCIES ########
RUN apt update && apt -qq install -y python3.8 python-is-python3 && apt clean

######## COPY TRINO ########
RUN mkdir trino-server
WORKDIR trino-server
COPY --from=builder trino-server .
RUN mkdir -p etc/catalog

######## ADD ANY CONNECTORS AS BELOW EXAMPLE. Ref - https://trino.io/docs/current/connector.html ########
RUN ls .
RUN printf "connector.name=jmx" > etc/catalog/jmx.properties

######## ADD DEFAULT JVM CONFIG. ANY SETTINGS CAN BE CHANGED IN BELOW LINE ########
RUN printf -- "-server\n-Xmx16G\n-XX:-UseBiasedLocking\n-XX:+UseG1GC\n-XX:G1HeapRegionSize=32M\n-XX:+ExplicitGCInvokesConcurrent\n-XX:+ExitOnOutOfMemoryError\n-XX:+HeapDumpOnOutOfMemoryError\n-XX:-OmitStackTraceInFastThrow\n-XX:ReservedCodeCacheSize=512M\n-XX:PerMethodRecompilationCutoff=10000\n-XX:PerBytecodeRecompilationCutoff=10000\n-Djdk.attach.allowAttachSelf=true\n-Djdk.nio.maxCachedBufferSize=2000000\n" > etc/jvm.config


######## ADD LOG PROPERTIES ########
ARG LOG_LEVEL=INFO
RUN printf -- "io.trino=$LOG_LEVEL" > etc/log.properties

######## ADD NODE PROPERTIES ########
ARG ENV=dev
ARG DATA_DIR=/var/trino/data

# Create trino data/log directory
RUN mkdir -p $DATA_DIR
RUN printf -- "node.environment=$ENV\nnode.id=ffffffff-ffff-ffff-ffff-ffffffffffff\nnode.data-dir=$DATA_DIR\n" > etc/node.properties

######## ADD DEFAULT CONFIG PROPERTIES. ANY SETTINGS CAN BE CHANGED VIA BUILD ARGS ########
ARG PORT=8099
ARG MAX_MEMORY=50GB
ARG MAX_MEMORY_PER_NODE=1GB
ARG MAX_TOTAL_MEMORY_PER_NODE=2GB
RUN printf -- "coordinator=true\nnode-scheduler.include-coordinator=false\nhttp-server.http.port=$PORT\nquery.max-memory=$MAX_MEMORY\nquery.max-memory-per-node=$MAX_MEMORY_PER_NODE\nquery.max-total-memory-per-node=$MAX_TOTAL_MEMORY_PER_NODE\ndiscovery.uri=http://$HOST:$PORT\n" > etc/config.properties

######## START SERVER ########
EXPOSE $PORT
CMD bin/launcher start && tail -f /dev/null